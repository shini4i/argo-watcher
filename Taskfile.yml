version: '3'
silent: true

tasks:
  install-deps:
    desc: Install dependencies
    cmds:
      - echo "===> Installing dependencies"
      - go install github.com/swaggo/swag/cmd/swag@latest
      - go install go.uber.org/mock/mockgen@latest
      - go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - echo "===> Done"
    status:
      - type swag mockgen migrate

  mocks:
    desc: Generate mocks for tests
    internal: true
    cmds:
      - echo "===> Generating mocks"
      - mockgen --source=cmd/argo-watcher/argocd/argo_api.go --destination=cmd/argo-watcher/mock/argo_api.go --package=mock
      - mockgen --source=cmd/argo-watcher/state/state.go --destination=cmd/argo-watcher/mock/state.go --package=mock
      - mockgen --source=cmd/argo-watcher/prometheus/metrics.go --destination=cmd/argo-watcher/mock/metrics.go --package=mock
      - mockgen --source=pkg/updater/interfaces.go --destination=pkg/updater/mock/interfaces.go --package=mock
    sources:
      - cmd/argo-watcher/argocd/argo_api.go
      - cmd/argo-watcher/state/state.go
      - cmd/argo-watcher/prometheus/metrics.go
      - pkg/updater/interfaces.go
    generates:
      - cmd/argo-watcher/mock/argo_api.go
      - cmd/argo-watcher/mock/state.go
      - cmd/argo-watcher/mock/metrics.go
      - pkg/updater/mock/interfaces.go

  docs:
    desc: Generate swagger docs
    dir: cmd/argo-watcher
    cmds:
      - echo "===> Generating swagger docs"
      - swag init --parseDependency --parseInternal
    sources:
      - server/router.go
    generates:
      - docs/docs.go
      - docs/swagger.json
      - docs/swagger.yaml

  test:
    desc: Run tests
    deps: [mocks]
    cmds:
      - echo "===> Running tests"
      - ARGO_TIMEOUT=1 go test -v ./... -count=1 -coverprofile coverage.out

  build:
    desc: Build the project
    deps: [docs]
    cmds:
      - echo "===> Building the project"
      - CGO_ENABLED=0 go build -ldflags="-s -w -X github.com/shini4i/argo-watcher/cmd/argo-watcher/server.version=local" -o argo-watcher ./cmd/argo-watcher
      - echo "===> Done"
    sources:
      - cmd/argo-watcher/**/*.go
    generates:
      - argo-watcher

  build-ui:
    desc: Build the UI
    dir: web
    cmds:
      - echo "===> Building the UI"
      - npm ci --silent && npm install react-scripts --silent && npm run build
      - echo "===> Done"

  bootstrap:
    desc: Bring docker compose setup up
    cmds:
      - echo "===> Bringing docker compose setup up"
      - docker compose up -d
      - echo "===> Done"

  teardown:
    desc: Bring docker compose setup down
    cmds:
      - echo "===> Bringing docker compose setup down"
      - docker compose down
      - echo "===> Done"
