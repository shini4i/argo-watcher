// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/argo-watcher/argo_api.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	config "github.com/shini4i/argo-watcher/cmd/argo-watcher/config"
	models "github.com/shini4i/argo-watcher/internal/models"
)

// MockArgoApiInterface is a mock of ArgoApiInterface interface.
type MockArgoApiInterface struct {
	ctrl     *gomock.Controller
	recorder *MockArgoApiInterfaceMockRecorder
}

// MockArgoApiInterfaceMockRecorder is the mock recorder for MockArgoApiInterface.
type MockArgoApiInterfaceMockRecorder struct {
	mock *MockArgoApiInterface
}

// NewMockArgoApiInterface creates a new mock instance.
func NewMockArgoApiInterface(ctrl *gomock.Controller) *MockArgoApiInterface {
	mock := &MockArgoApiInterface{ctrl: ctrl}
	mock.recorder = &MockArgoApiInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArgoApiInterface) EXPECT() *MockArgoApiInterfaceMockRecorder {
	return m.recorder
}

// GetApplication mocks base method.
func (m *MockArgoApiInterface) GetApplication(app string) (*models.Application, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApplication", app)
	ret0, _ := ret[0].(*models.Application)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApplication indicates an expected call of GetApplication.
func (mr *MockArgoApiInterfaceMockRecorder) GetApplication(app interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApplication", reflect.TypeOf((*MockArgoApiInterface)(nil).GetApplication), app)
}

// GetUserInfo mocks base method.
func (m *MockArgoApiInterface) GetUserInfo() (*models.Userinfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserInfo")
	ret0, _ := ret[0].(*models.Userinfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserInfo indicates an expected call of GetUserInfo.
func (mr *MockArgoApiInterfaceMockRecorder) GetUserInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserInfo", reflect.TypeOf((*MockArgoApiInterface)(nil).GetUserInfo))
}

// Init mocks base method.
func (m *MockArgoApiInterface) Init(serverConfig *config.ServerConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", serverConfig)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init.
func (mr *MockArgoApiInterfaceMockRecorder) Init(serverConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockArgoApiInterface)(nil).Init), serverConfig)
}
