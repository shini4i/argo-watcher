before:
  hooks:
    - make install-deps docs mocks
    - go mod tidy

builds:
  - id: argo-watcher
    main: ./cmd/argo-watcher
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w -X github.com/shini4i/argo-watcher/cmd/argo-watcher/server.version={{.Version}}
    goos:
      - linux
    goarch:
      - amd64
      - arm64

dockers:
  - image_templates:
      - 'ghcr.io/shini4i/{{.ProjectName}}:{{ .Tag }}-amd64'
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.licenses=MIT"
    goos: linux
    goarch: amd64
    extra_files:
      - web/build
      - db
  - image_templates:
      - 'ghcr.io/shini4i/{{.ProjectName}}:{{ .Tag }}-arm64'
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.licenses=MIT"
    goos: linux
    goarch: arm64
    extra_files:
      - web/build
      - db

docker_manifests:
  - name_template: 'ghcr.io/shini4i/{{.ProjectName}}:{{ .Tag }}'
    image_templates:
      - 'ghcr.io/shini4i/{{.ProjectName}}:{{ .Tag }}-amd64'
      - 'ghcr.io/shini4i/{{.ProjectName}}:{{ .Tag }}-arm64'

archives:
  - format: tar.gz
    name_template: "{{ .ProjectName }}_{{ .Tag }}_{{ .Os }}_{{ .Arch }}"

sboms:
  - artifacts: archive

signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    output: true
    artifacts: checksum
    args:
      - "sign-blob"
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"

docker_signs:
  - cmd: cosign
    artifacts: manifests
    args:
      - "sign"
      - "${artifact}@${digest}"
      - "--yes"

checksum:
  name_template: 'checksums.txt'

changelog:
  use:
    github-native

  groups:
    - title: "Features"
      regexp: "^feat\\(.*\\)?:.*$"
      order: 0
    - title: "Bug fixes"
      regexp: "^fix\\(.*\\)?:.*$"
      order: 1
    - title: "Enhancements"
      regexp: "^chore\\(.*\\)?:.*$"
      order: 2
    - title: "Documentation updates"
      regexp: "^docs\\(.*\\)?:.*$"
      order: 3
    - title: "Automation adjustments"
      regexp: "^ci\\(.*\\)?:.*$"
      order: 4
    - title: Others
      order: 999

release:
  prerelease: auto
  draft: false

  footer: |
    ## Docker Images
    - `ghcr.io/shini4i/{{.ProjectName}}:{{ .Tag }}`
    - `ghcr.io/shini4i/{{.ProjectName}}:{{ .Tag }}-amd64`
    - `ghcr.io/shini4i/{{.ProjectName}}:{{ .Tag }}-arm64`
