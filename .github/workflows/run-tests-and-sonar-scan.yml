name: Run unit tests
permissions:
  contents: read
on:
  push:
    branches:
      - main
    paths:
      - '**/*.go'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**/*.go'

jobs:
  security_scan:
    name: Security scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Install Task
        uses: arduino/setup-task@v2

      - name: Install environment dependencies
        run: task install-deps

      - name: Generate swagger docs
        run: task docs

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Install Task
        uses: arduino/setup-task@v2

      - name: Install environment dependencies
        run: task install-deps

      - name: Run database migrations
        run: task ci-migrate

      - name: Run tests
        env:
          DB_HOST: localhost
          DB_USER: postgres
          DB_NAME: postgres
          DB_PASSWORD: postgres
          DB_PORT: 5432
          STATE_TYPE: in-memory
          ARGO_URL: http://localhost:8081
          POSTGRES_DSN: postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable
        run: task test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out
