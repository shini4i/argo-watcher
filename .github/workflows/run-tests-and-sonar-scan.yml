name: Run unit tests and sonar scan
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.x'

      - name: Install required packages
        run: pip install cryptography==3.1.1 poetry==1.1.5 pytest coverage responses

      - name: Install project
        run: poetry export -f requirements.txt | pip install -r /dev/stdin

      - name: Install dbmate
        run: curl -fsSL -o /usr/local/bin/dbmate https://github.com/amacneil/dbmate/releases/latest/download/dbmate-linux-amd64 && chmod +x /usr/local/bin/dbmate

      - name: Run migrations
        env:
          DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable"
        run: /usr/local/bin/dbmate up

      - name: Create required directory
        run: mkdir -p static

      - name: Run tests
        env:
          STATE_TYPE: in-memory
          ARGO_URL: https://argocd.example.com
          ARGO_USER: test
          ARGO_PASSWORD: test
          DB_HOST: localhost
          DB_USER: postgres
          DB_NAME: postgres
          DB_PASSWORD: postgres
        run: coverage run -m pytest -rap --junitxml coverage.xml

      - name: Generate coverage report
        run: coverage xml -i

      - name: Override Coverage Source Path for Sonar
        run: |
          sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
